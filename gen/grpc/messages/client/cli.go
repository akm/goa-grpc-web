// Code generated by goa v3.15.2, DO NOT EDIT.
//
// messages gRPC client CLI support package
//
// Command:
// $ goa gen goa-grpc-web/design

package client

import (
	"encoding/json"
	"fmt"
	messagespb "goa-grpc-web/gen/grpc/messages/pb"
	messages "goa-grpc-web/gen/messages"
)

// BuildSendPayload builds the payload for the messages send endpoint from CLI
// flags.
func BuildSendPayload(messagesSendMessage string) (*messages.Message, error) {
	var err error
	var message messagespb.SendRequest
	{
		if messagesSendMessage != "" {
			err = json.Unmarshal([]byte(messagesSendMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"message\": \"Sint id soluta quos animi architecto libero.\"\n   }'")
			}
		}
	}
	v := &messages.Message{
		Message: message.Message_,
	}

	return v, nil
}
