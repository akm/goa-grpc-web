// Code generated by goa v3.15.2, DO NOT EDIT.
//
// messages gRPC server types
//
// Command:
// $ goa gen goa-grpc-web/design

package server

import (
	messagespb "goa-grpc-web/gen/grpc/messages/pb"
	messages "goa-grpc-web/gen/messages"
)

// NewSendPayload builds the payload of the "send" endpoint of the "messages"
// service from the gRPC request type.
func NewSendPayload(message *messagespb.SendRequest) *messages.Message {
	v := &messages.Message{
		Message: message.Message_,
	}
	return v
}

// NewProtoSendResponse builds the gRPC response type from the result of the
// "send" endpoint of the "messages" service.
func NewProtoSendResponse() *messagespb.SendResponse {
	message := &messagespb.SendResponse{}
	return message
}

// NewProtoSubscribeResponse builds the gRPC response type from the result of
// the "subscribe" endpoint of the "messages" service.
func NewProtoSubscribeResponse(result *messages.Message) *messagespb.SubscribeResponse {
	message := &messagespb.SubscribeResponse{
		Message_: result.Message,
	}
	return message
}

func NewProtoMessage_SubscribeResponse(result *messages.Message) *messagespb.SubscribeResponse {
	v := &messagespb.SubscribeResponse{
		Message_: result.Message,
	}
	return v
}
