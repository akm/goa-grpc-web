// Code generated by goa v3.15.2, DO NOT EDIT.
//
// messages HTTP client types
//
// Command:
// $ goa gen goa-grpc-web/design

package client

import (
	messages "goa-grpc-web/gen/messages"

	goa "goa.design/goa/v3/pkg"
)

// SendRequestBody is the type of the "messages" service "send" endpoint HTTP
// request body.
type SendRequestBody struct {
	Message string `form:"message" json:"message" xml:"message"`
}

// SubscribeResponseBody is the type of the "messages" service "subscribe"
// endpoint HTTP response body.
type SubscribeResponseBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// NewSendRequestBody builds the HTTP request body from the payload of the
// "send" endpoint of the "messages" service.
func NewSendRequestBody(p *messages.Message) *SendRequestBody {
	body := &SendRequestBody{
		Message: p.Message,
	}
	return body
}

// NewSubscribeMessageOK builds a "messages" service "subscribe" endpoint
// result from a HTTP "OK" response.
func NewSubscribeMessageOK(body *SubscribeResponseBody) *messages.Message {
	v := &messages.Message{
		Message: *body.Message,
	}

	return v
}

// ValidateSubscribeResponseBody runs the validations defined on
// SubscribeResponseBody
func ValidateSubscribeResponseBody(body *SubscribeResponseBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}
