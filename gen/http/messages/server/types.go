// Code generated by goa v3.15.2, DO NOT EDIT.
//
// messages HTTP server types
//
// Command:
// $ goa gen goa-grpc-web/design

package server

import (
	messages "goa-grpc-web/gen/messages"

	goa "goa.design/goa/v3/pkg"
)

// SendRequestBody is the type of the "messages" service "send" endpoint HTTP
// request body.
type SendRequestBody struct {
	Message *string `form:"message,omitempty" json:"message,omitempty" xml:"message,omitempty"`
}

// SubscribeResponseBody is the type of the "messages" service "subscribe"
// endpoint HTTP response body.
type SubscribeResponseBody struct {
	Message string `form:"message" json:"message" xml:"message"`
}

// NewSubscribeResponseBody builds the HTTP response body from the result of
// the "subscribe" endpoint of the "messages" service.
func NewSubscribeResponseBody(res *messages.Message) *SubscribeResponseBody {
	body := &SubscribeResponseBody{
		Message: res.Message,
	}
	return body
}

// NewSendMessage builds a messages service send endpoint payload.
func NewSendMessage(body *SendRequestBody) *messages.Message {
	v := &messages.Message{
		Message: *body.Message,
	}

	return v
}

// ValidateSendRequestBody runs the validations defined on SendRequestBody
func ValidateSendRequestBody(body *SendRequestBody) (err error) {
	if body.Message == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("message", "body"))
	}
	return
}
